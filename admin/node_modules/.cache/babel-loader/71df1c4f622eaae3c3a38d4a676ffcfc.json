{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91934\\\\Desktop\\\\project\\\\restaurant\\\\src\\\\Components\\\\Update.js\";\nimport React from 'react';\nimport { Container, Box, Typography, TextField, CircularProgress, Button } from \"@material-ui/core\";\nimport logo from \"../media/logo.PNG\";\nexport default class ResturantUpdate extends React.PureComponent {\n  componentDidMount() {\n    // console.log(this.props)\n    fetch('http://localhost:8080/resturant/' + this.props.match.params.id).then(resp => {\n      resp.json().then(data => {\n        // console.log(data)\n        this.setState({\n          name: data.name,\n          email: data.email,\n          Address: data.Address,\n          Rating: data.Rating,\n          id: data.id\n        });\n      });\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      Address: '',\n      Rating: '',\n      id: ''\n    };\n\n    this.update = () => {\n      fetch('http://localhost:8080/resturant/' + this.state.id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(resp => {\n        resp.json().then(result => {\n          // console.log(result)\n          alert('Resturant has been Updated');\n        });\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.login = () => {\n      let valid_data = true;\n      this.state.email_error = null;\n      this.state.password_error = null;\n\n      if (this.state.email === \"\") {\n        this.state.email_error = \"Required!\";\n        valid_data = false;\n      }\n\n      if (this.state.password === \"\") {\n        this.state.password_error = \"Required!\";\n        valid_data = false;\n      }\n\n      this.setState({\n        update: true\n      });\n\n      if (valid_data) {\n        this.state.show_progress = true;\n        fetch('http://localhost:8080/login?q=' + this.state.email).then(resp => {\n          resp.json().then(data => {\n            //console.log('Result',data);\n            let a, b;\n            this.state.list.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n              key: item.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }\n            }, a = item.username, b = item.password));\n\n            if (a == this.state.name && b == this.state.password) {\n              this.state.show_progress = false;\n              localStorage.setItem(\"login\", JSON.stringify(data));\n              console.log(this.props.history.push(\"/\"));\n            } else {\n              this.state.show_progress = true;\n              alert('Oops!!! You Are Not An Admin');\n            }\n\n            console.log(data);\n          });\n        });\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      Rating: \"\",\n      categoryId: \"\",\n      list: null,\n      show_progress: false\n    };\n    fetch('http://localhost:8080/login').then(resp => {\n      resp.json().then(data => {\n        console.log(data);\n        this.setState({\n          list: data\n        });\n      });\n    });\n    this.handleChange = this.handleChange.bind();\n    this.login = this.login.bind();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      class: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \" Resturant Update \"), /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      bgcolor: \"white\",\n      boxShadow: \"2\",\n      borderRadius: \"12px\",\n      textAlign: \"center\",\n      p: \"24px\",\n      mt: \"50px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \"RESTAURANT UPDATE\"), /*#__PURE__*/React.createElement(TextField, {\n      label: \"Email\",\n      id: \"outlined-size-small\",\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handleChange,\n      error: this.state.email_error != null,\n      helperText: this.state.email_error,\n      variant: \"outlined\",\n      fullWidth: true,\n      color: \"secondary\",\n      margin: \"normal\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      label: \"Password\",\n      id: \"outlined-size-small\",\n      type: \"password\",\n      name: \"password\",\n      error: this.state.password_error != null,\n      helperText: this.state.password_error,\n      onChange: this.handleChange,\n      variant: \"outlined\",\n      fullWidth: true,\n      color: \"secondary\",\n      margin: \"normal\",\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    }), this.state.show_progress ? /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 24,\n      thickness: 4,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      disableElevation: true,\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: this.update,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, \"Update Restaunrant\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/91934/Desktop/project/restaurant/src/Components/Update.js"],"names":["React","Container","Box","Typography","TextField","CircularProgress","Button","logo","ResturantUpdate","PureComponent","componentDidMount","fetch","props","match","params","id","then","resp","json","data","setState","name","email","Address","Rating","constructor","state","update","method","headers","body","JSON","stringify","result","alert","handleChange","e","target","value","login","valid_data","email_error","password_error","password","show_progress","a","b","list","map","item","i","username","localStorage","setItem","console","log","history","push","address","categoryId","bind","render","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Container,\r\n    Box,\r\n    Typography,\r\n    TextField,\r\n    CircularProgress,\r\n    Button\r\n  } from \"@material-ui/core\";\r\n  import logo from \"../media/logo.PNG\";\r\n\r\nexport default class ResturantUpdate extends React.PureComponent {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        Address: '',\r\n        Rating: '',\r\n        id: ''\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.props)\r\n        fetch('http://localhost:8080/resturant/' + this.props.match.params.id).then((resp) => {\r\n            resp.json().then((data) => {\r\n                // console.log(data)\r\n                this.setState({\r\n                    name: data.name,\r\n                    email: data.email,\r\n                    Address: data.Address,\r\n                    Rating: data.Rating,\r\n                    id: data.id\r\n                })\r\n            })\r\n        })\r\n    }\r\n    update=()=>{\r\n        fetch('http://localhost:8080/resturant/'+this.state.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state)\r\n        }).then((resp) => {\r\n            resp.json().then((result) => {\r\n                // console.log(result)\r\n                alert('Resturant has been Updated')\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name:\"\",\r\n             email:\"\",\r\n             address:\"\",\r\n             Rating:\"\",\r\n             categoryId:\"\",\r\n             list:null,\r\n             show_progress:false\r\n        };\r\n  \r\n  \r\n        fetch('http://localhost:8080/login').then((resp) => {\r\n          resp.json().then((data) => {\r\n              console.log(data)\r\n              this.setState({\r\n                  list:data\r\n              })\r\n          })\r\n      })\r\n  \r\n        this.handleChange = this.handleChange.bind()\r\n        this.login = this.login.bind()\r\n    }\r\n    \r\n  \r\n  \r\n    handleChange = (e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n  \r\n    login = ()=>{\r\n      let valid_data = true;\r\n      this.state.email_error = null;\r\n      this.state.password_error = null;\r\n  \r\n      if(this.state.email===\"\"){\r\n          this.state.email_error = \"Required!\";\r\n          valid_data=false;\r\n      }\r\n      if(this.state.password===\"\"){\r\n          this.state.password_error = \"Required!\";\r\n          valid_data=false;\r\n      }\r\n      this.setState({\r\n          update:true\r\n      })\r\n  \r\n      if(valid_data){\r\n        this.state.show_progress = true\r\n        fetch('http://localhost:8080/login?q=' + this.state.email).then((resp) => {\r\n          resp.json().then((data) => {\r\n               //console.log('Result',data);\r\n  \r\n                  let a,b;\r\n                  this.state.list.map((item, i) =>\r\n  \r\n                  <div key={item.id}>\r\n                      {\r\n                       a = item.username\r\n                       }\r\n                       {\r\n                           b=item.password\r\n                       }\r\n                  </div>\r\n              \r\n              )\r\n  \r\n              if(a==this.state.name && b==this.state.password) {\r\n                this.state.show_progress = false\r\n                  localStorage.setItem(\"login\",JSON.stringify(data))\r\n                  console.log(this.props.history.push(\"/\"))\r\n              }\r\n              else {\r\n                this.state.show_progress = true\r\n                  alert('Oops!!! You Are Not An Admin')\r\n              }   \r\n              console.log(data);  \r\n          })\r\n      })\r\n      }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 class={{color:'red'}}> Resturant Update </h1>\r\n               {/* <div>\r\n                    <input placeholder='Resturant Name' onChange={(e) => this.setState({ name: e.target.value })} value={this.state.name} /><br /><br />\r\n                    <input placeholder='Resturant Email' onChange={(e) => this.setState({ email: e.target.value })} value={this.state.email} /><br /><br />\r\n                    <input placeholder='Resturant Rating' onChange={(e) => this.setState({ Rating: e.target.value })} value={this.state.Rating} /><br /><br />\r\n                    <input placeholder='Resturant Address' onChange={(e) => this.setState({ Address: e.target.value })} value={this.state.Address} /><br /><br />\r\n                    <button onClick={this.update}>Update Resturant</button>\r\n                </div>\r\n               */}\r\n\r\n        <Container maxWidth=\"sm\">\r\n        <Box\r\n          bgcolor=\"white\"\r\n          boxShadow=\"2\"\r\n          borderRadius=\"12px\"\r\n          textAlign=\"center\"\r\n          p=\"24px\"\r\n          mt=\"50px\"\r\n        >\r\n          <Typography variant=\"h5\" color=\"primary\">\r\n            RESTAURANT UPDATE\r\n          </Typography>\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            id=\"outlined-size-small\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={this.handleChange}\r\n            error={this.state.email_error!=null}\r\n            helperText={this.state.email_error}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            color=\"secondary\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n          />\r\n\r\n          <TextField\r\n            label=\"Password\"\r\n            id=\"outlined-size-small\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            error={this.state.password_error!=null}\r\n            helperText={this.state.password_error}\r\n            onChange={this.handleChange}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            color=\"secondary\"\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n          />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          {\r\n          this.state.show_progress?\r\n          <CircularProgress size={24} thickness={4} color=\"primary\" />\r\n          :null\r\n          }\r\n\r\n          <br />\r\n          <br />\r\n          <Button disableElevation variant=\"contained\" color=\"primary\" fullWidth onClick={this.update}>\r\n            Update Restaunrant\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}